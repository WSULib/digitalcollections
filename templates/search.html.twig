{% import "macros.html.twig" as m %}
{% extends "base.html.twig" %}

{% block title %}{{ data.id }}{% endblock %}
{% block head %}
    {{ parent() }}
{% endblock %}

{# search form in header #}
{% block search_form_string %}{{search_params.q}}{% endblock search_form_string %}

{% block content %}



<div class="container cached">

	<div class="row">
		<div class="col-md-12" style="margin-top:20px;">			
		</div>
	</div>
    
    <div class="row">

    	<div class="col-md-3">
	    
		    <div id="facets_container" class="facets">

		        <ul class="facet_container filter" id="search_facet">
		            <li>
		                <h3 class="tree-toggler">Search within Results</h3>
		                <ul class="tree facet_list" id="search_facet_box">
		                    <form onsubmit="refineByKeyWord('search','same'); return false;" role="form">
		                        <input id="refine_input" placeholder='Type in word or phrase' class="search-filter">                                                                
								<label class="radio-inline">
									<input type="radio" id="metadata" name="refine_type" value="metadata"> Item Record Only
								</label>
								<label class="radio-inline">
									<input type="radio" id="fulltext" name="refine_type" value="fulltext"> Full-Text Only
								</label>
								<label class="radio-inline">
									<input checked type="radio" id="both" name="refine_type" value="both"> Both
								</label>
		                    </form>
		                </ul>
		            </li>
		        </ul>

		        <!-- ContentModel -->
			    {{ m.facetBlockBuilder(data, 'Content-Type', 'human_hasContentModel') }}

			    <!-- Collection -->
			    {{ m.facetBlockBuilder(data, 'Collection', 'human_isMemberOfCollection') }}

			    <!-- MODS Year -->
			    {{ m.facetBlockBuilder(data, 'Date', 'facet_mods_year') }}

			    <!-- DC Subject -->
			    {{ m.facetBlockBuilder(data, 'Subject', 'dc_subject') }}

			    <!-- Creator -->
			    {{ m.facetBlockBuilder(data, 'Creator', 'dc_creator') }}

			    <!-- Coverage -->
			    {{ m.facetBlockBuilder(data, 'Coverage', 'dc_coverage') }}

			    <!-- Language -->
			    {{ m.facetBlockBuilder(data, 'Language', 'dc_language') }}

			    <!-- Publisher -->
			    {{ m.facetBlockBuilder(data, 'Publisher', 'dc_publisher') }}
		        
		    </div>
	    </div> <!-- /facets -->

	    <div id="results" class="col-md-9" style="margin-bottom:10px;">

	    	<div id="facet_modal" class="row" style="display:none;">
	    		<div class="col-md-12">
	    			<table id="facet_modal_table" class="table">
	    				<thead>
	    					<tr>
	    						<th>Facet Value</th>
	    						<th>Facet Count</th>
    						</tr>
						</thead>
						<tbody>
							<tr>
								<td>Georgia</td>
								<td>42</td>
							</tr>
							<tr>
								<td>Arkansas</td>
								<td>44</td>
							</tr>
						</tbody>
    				</table>
    			</div>
			</div>

			<div id="non_modal">

		    	<div id="results_header" class="row row-fluid filtered-by refined-by" style="background-color: rgba(255, 219, 116, 0.3); padding-top: 15px; margin-bottom: 20px;">

		    		<div class="row">

			    		<div class="col-md-4">
			    			<h2 style="margin-top:0px;"><span style="font-weight:bold;" id='num_results'>{{ data.response.solr_results.response.numFound|number_format }}</span> Results</h2>
		    			</div>

		    			<div class="col-md-8" style="float:right; text-align:right;">
							<span style="font-weight:bold; display:inline-block;">Results per Page</span>
					    	<div style="display:inline-block; padding-right:10px;" class="form-group">
					    		<select id="results_per_page" class="resPerPage form-control" name="results_per_page">
					    			{# <label for="results_per_page">Results per Page</label> #}
					        		<option {% if search_params.rows == 10 %}selected{% endif %} value=10>10</option>
					        		<option {% if search_params.rows == 20 %}selected{% endif %} value=20>20</option>
					        		<option {% if search_params.rows == 50 %}selected{% endif %} value=50>50</option>
					        		<option {% if search_params.rows == 100 %}selected{% endif %} value=100>100</option>
					    		</select>
							</div>
							<span style="font-weight:bold; display:inline-block; padding-right:10px;">Layout</span> <a href="{{path_for('search') ~ "?" ~ set_layout_param(QueryBuilder, 'list', query_string)}}">List <i class="icon-list4"></i></a> | <a href="{{path_for('search') ~ "?" ~ set_layout_param(QueryBuilder, 'grid', query_string)}}">Grid <i class="icon-layout"></i></a> | <a href="#" onclick="toggleFacets(); return false;">Facets <i class="icon-eye"></i></a>

						</div>

					</div>				

					{% if search_params.fq|length > 0 %}
					<div class="row">
						<div class="col-md-12" style="margin-bottom:20px;">
							<h5 style="margin-top:0px; margin-bottom:0px;">Refined by:</h5>
							{% for fq in search_params.fq %}
					    		<span class="facet-item"><a href="{{path_for('search') ~ "?" ~ del_param_from_query_string(QueryBuilder, fq, query_string, true)}}"><i class="icon-delete"></i> <span class="facet_name">{{ facet_map[fq|split(":")[0]] }}</span>: {{ fq|split(":")|slice(1,3)|join(":") }}</a></span>
					        {% endfor %}
				        </div>
			        </div>
			        {% endif %}


				</div>
		    	
		        <!-- results -->
		        <div class="row">
		        	<div class="col-md-12" style="padding-left:0px;">
				        <ul class="row-fluid objects-container" id="results_container">

				        	<!-- list -->
				        	{% if search_params.layout == 'list' %}
				        		{% for doc in data.response.solr_results.response.docs %}
					        	<li class="obj-cnt object-container-list">
								    <div class="crop">
								        <a href="/item/{{doc.id}}">
						                	<img src="/item/{{doc.id}}/thumbnail" width="100%" alt="White Star Refining Company. Exterior.">				            
								        </a>
								    </div>
								    <h3>
								        <a href="/item/{{doc.id}}">{{doc.dc_title[0]}}<br> </a>
								    </h3>
								    <!-- what is this reserved for? -->
								    <h4></h4>
								    <p class="truncate" style="margin:0px;">{{(doc.dc_description[0]|length > 500 ? doc.dc_description[0]|slice(0, 500) ~ '&hellip;' : doc.dc_description[0])|raw}}</p>    
								</li>
								{% endfor %}
							{% endif %}

							<!-- grid -->
							{% if search_params.layout == 'grid' %}
								{% for doc in data.response.solr_results.response.docs %}
									<div class='tile'>
										<a href="/item/{{doc.id}}">		
											<img src="/item/{{doc.id}}/thumbnail" width='100%' alt="{{solr_data.dc_title}}"/>
											<div class="info">
												<p>{{doc.dc_title[0]}}</p>						
											</div>
										</a>
									</div>
								{% endfor %}
							{% endif %}

							<!-- facets -->
							{% if search_params.hide_facets == 'true' %}
								<script>
									$(document).ready(function(){
										toggleFacets();
									});
								</script>
							{% endif %}

			        	</ul>
					</div>
				</div>

			</div>

		</div> <!-- close right side -->

	</div> 
        

    <!-- pagination row -->
    <div class="row">
    	<div class="col-md-12">

	        <!-- pagination -->
	        <div class="pagination-centered"></div>

        </div>
    </div>

</div> <!-- /container -->


<script>

	/* ############################################### */
	/* Move these to another JS file during JS cleanup */
	/* ############################################### */

	/////////////////////////////////////////////////////
	// update pagination
	/////////////////////////////////////////////////////
	$(document).ready(function(){
		
		var spage = parseInt({{search_params.start}} / {{search_params.rows}}) + 1;
		if (spage == 0) {
			spage = 1;
		}
		
		$('.pagination-centered').bootpag({
			 total: tpagesPaginate({{data.response.solr_results.response.numFound}}, {{search_params.rows}}),
			 page: spage,
			 maxVisible: 8,
			 leaps:false
		}).on('page', function(event, num){         
				var nURL = updateURLParameter(window.location.href, "start", ((num * {{search_params.rows}}) - {{search_params.rows}}) );
				// refresh page 
			window.location = nURL;
		});
	});

	function tpagesPaginate(results, rows){
		var tpage_dec = results / rows;
		if (tpage_dec % 1 != 0){
			return parseInt(tpage_dec) + 1
		}
		else {
			return tpage_dec
		}
	}

	/////////////////////////////////////////////////////
	// update results per page
	/////////////////////////////////////////////////////
	$(document).ready(function(){
		
		// monitor for change
		$(".resPerPage").change(function() {    
			var nURL = window.location.href;    
			new_rows = $(this).val();
			nURL = updateURLParameter(nURL, 'rows', new_rows); 
			// adjust start pointer
			if (new_rows > {{search_params.start}}){    
				nURL = updateURLParameter(nURL, 'start', "0");
			} 
			// refresh page 
			window.location = nURL;
		});  
	});

	/////////////////////////////////////////////////////
	// init grid freewall code
	/////////////////////////////////////////////////////
	gridInit();


	/////////////////////////////////////////////////////
	// toggle facets
	/////////////////////////////////////////////////////
	$(document).ready(function(){
		
		var facet_check = getUrlParameter('facets');

		if (facet_check == 'true') {
			toggleFacets();
		}

	});

	function toggleFacets(){	

		$("#facets_container").toggle();
		$("#results").toggleClass('col-md-9').toggleClass('col-md-12');
		facetLayoutRefresh();
	}

	function facetLayoutRefresh(){
		if (getUrlParameter('layout') == 'grid'){
			var wall = new freewall("#results_container");
			wall.refresh();	
			window.dispatchEvent(new Event('resize'));		
		}
	}

	function getUrlParameter(sParam) {
	    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
	        sURLVariables = sPageURL.split('&'),
	        sParameterName,
	        i;

	    for (i = 0; i < sURLVariables.length; i++) {
	        sParameterName = sURLVariables[i].split('=');

	        if (sParameterName[0] === sParam) {
	            return sParameterName[1] === undefined ? true : sParameterName[1];
	        }
	    }
	};

	/////////////////////////////////////////////////////
	// select facets
	/////////////////////////////////////////////////////
	function facet_select(facet_id){
		
		console.log('opening facet party for:',facet_id);

		// if not already set, prep and build table
		if (!$("#facet_modal").attr('current_facet_id') || $("#facet_modal").attr('current_facet_id') != facet_id ){

			console.log('current_facet_id either not set, or does not equal current request - creating table');

			// add facet_id as attr, in case return to immediately, don't reload data		
			$("#facet_modal").attr('current_facet_id',facet_id);

			// build and prep table
		    $('#facet_modal_table').DataTable({
		    	ajax: {
					url: 'http://graham.digidev.library.wayne.edu/api/search?facet.limit=-1',
					dataSrc: 'response.solr_results.facet_counts.facet_fields.' + facet_id,					
				},
				columns: [
					{data: 0},
					{data: 1}
				],
				order: [[1,'desc']]
	    	});

		}

		// after table built, or if returning to pre-built table, show
		$("#non_modal").toggle();
		$("#facet_modal").toggle();

	}

</script>


{% endblock %}























